name: Bump Version

on:
  push:
    branches:
      - master

jobs:
  bump_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get last merged PR branch and release notes
        id: pr
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              base: 'master',
              sort: 'updated',
              direction: 'desc',
              per_page: 5
            });

            const mergedPr = prs.find(pr => pr.merged_at);
            if (!mergedPr) throw new Error("No merged PR found");

            const body = mergedPr.body || "";
            const branch = mergedPr.head.ref;

            // More flexible regex to match section headings like:
            // ## Release Notes
            // ##Release Notes:
            const match = body.match(/##\s*Release\s*Notes:?\s*\n([\s\S]*?)(\n##|\n###|$)/i);
            const releaseNotes = match ? match[1].trim() : "No release notes found in PR.";

            core.setOutput("branch", branch);
            core.setOutput("body", releaseNotes);

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Bump version and push changes
        id: bump
        run: |
          FILE="./WiX/WiX.wixproj"
          branch="${{ steps.pr.outputs.branch }}"

          VERSION=$(xmlstarlet sel -t -v "/Project/PropertyGroup/Version" "$FILE")
          echo "Current version: $VERSION"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          if [[ "$branch" == *"feature"* ]]; then
            ((MAJOR+=1)); MINOR=0; PATCH=0
          elif [[ "$branch" == *"improvement"* ]]; then
            ((MINOR+=1)); PATCH=0
          elif [[ "$branch" == *"bug"* || "$branch" == *"tech-debt"* ]]; then
            ((PATCH+=1))
          else
            echo "Branch pattern not recognized. Skipping bump."; exit 1
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Bumping to version: $NEW_VERSION"

          echo "✍️ Updating version in $FILE..."
          xmlstarlet ed --inplace -u "/Project/PropertyGroup/Version" -v "$NEW_VERSION" "$FILE"

          echo "🔍 Re-reading updated version..."
          UPDATED=$(xmlstarlet sel -t -v "/Project/PropertyGroup/Version" "$FILE")
          echo "✅ Updated version read back: $UPDATED"

          if [[ "$UPDATED" != "$NEW_VERSION" ]]; then
            echo "❌ Version update failed!"; exit 1
          fi

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-${{ steps.bump.outputs.version }}
          base: master
          title: "Bump version to ${{ steps.bump.outputs.version }}"
          body: |
            Auto-bumped version from branch `${{ steps.pr.outputs.branch }}`

            **Release Notes**:
            ${{ steps.pr.outputs.body }}
