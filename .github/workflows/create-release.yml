name: Create Release

on:
  push:
    branches:
      - master
    paths:
      - '**/*.wixproj'
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Extract version from .wixproj
        id: version
        run: |
          FILE="./WiX/WiX.wixproj"
          VERSION=$(xmlstarlet sel -t -v "//Version" "$FILE")
          echo "Version from .wixproj: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get merged PR with title starting 'Bump version'
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              per_page: 5
            });

            const lastCommit = commits[0];

            const { data: pulls } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: lastCommit.sha
            });

            const matched = pulls.find(pr =>
              pr.merged_at &&
              pr.title.toLowerCase().startsWith("bump version")
            );

            if (!matched) {
              core.setFailed("‚ùå No merged PR with title starting 'Bump version' found.");
              return;
            }

            const body = matched.body || "";
            const match = body.match(/(?:(?:#{2,3}|\*\*|__)?\s*Release\s*Notes\s*(?::|-)?(?:\*\*|__)?\s*)\n([\s\S]*?)(?=\n(?:#{2,3}|[*_]{2}|\Z))/i);
            const releaseNotes = match ? match[1].trim() : "No release notes found in PR.";

            core.setOutput("notes", releaseNotes);


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: ${{ steps.pr.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
